@model AHelpingHand.Models.CustomerCreate
@using AHelpingHand.Data

@{
    ViewBag.Title = "Create";
}

<h1 class="custTitle">- Looking for help? -</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2", style = "font-size: 2em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", style = "font-size: 1.5em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" } } )
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", style = "font-size: 2em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", style = "font-size: 1.5em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2", style = "font-size: 2em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })

            <div id="category" class="col-md-10">
                @if (ViewData.ContainsKey("Category"))
                {
                    @Html.DropDownList("Category", ViewData["category"] as List<SelectListItem>, new { style = "font-size: 1.5em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subcategory, htmlAttributes: new { @class = "control-label col-md-2", style = "font-size: 2em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })
            <div class="col-md-10">
                @Html.DropDownList("Subcategory", new SelectList(string.Empty, "Value", "Text"), "Please select a subcategory", new { style = "font-size: 1.5em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })
                @Html.ValidationMessageFor(model => model.Subcategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Skill, htmlAttributes: new { @class = "control-label col-md-2", style = "font-size: 2em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Skill, new SelectList(Enum.GetValues(typeof(Skill))), "SkillLevel", new { style = "font-size: 1.5em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })
                @Html.ValidationMessageFor(model => model.Skill, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary btn-lg purple-background white" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("<- Back to List", "Index", null, new { @style = "font-size: 2.25em; font-variant: small-caps; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" })
</div>

@section Scripts {
    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
        $("#Category").change(function () {
            $("#Subcategory").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSubcategories")',
                dataType: 'json',
                data: { id: $("#Category").val() },
                success: function (subcategories) {
                    $.each(subcategories, function (i, subcategory) {
                    $("#Subcategory").append('<option value="' + subcategory.Value + '">' +
                         subcategory.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve subcategories.' + ex);
                }
            });
            return false;
        })
    });
    </script>
}
@section head{
    <style type="text/css">
        body {
            background-image: url(/Content/Image/background8.jpg);
            background-size: cover;
            background-repeat: no-repeat;
            margin: 0;
        }

        .custTitle {
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
            font-variant: small-caps;
            font-size: 5em;
            text-align: center;
        }

        footer {
            font-size: 1.25em;
            font-variant: small-caps;
            font-weight: 900;
            position: fixed;
            left: 0;
            bottom: 0;
            width: 100%;
            text-align: center;
        }

        .purple-background {
            background-color: purple;
        }

        .white {
            color: white;
        }
    </style>
}